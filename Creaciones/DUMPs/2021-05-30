--
-- PostgreSQL database dump
--

-- Dumped from database version 13.2
-- Dumped by pg_dump version 13.2

-- Started on 2021-05-30 19:34:40

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 667 (class 1247 OID 18333)
-- Name: dni; Type: DOMAIN; Schema: public; Owner: postgres
--

CREATE DOMAIN public.dni AS character varying(8)
	CONSTRAINT dni_check CHECK (((VALUE)::integer <= 99999999));


ALTER DOMAIN public.dni OWNER TO postgres;

--
-- TOC entry 671 (class 1247 OID 18336)
-- Name: mesaño; Type: DOMAIN; Schema: public; Owner: postgres
--

CREATE DOMAIN public."mesaño" AS character varying(7)
	CONSTRAINT date_check CHECK (('1990-01-01'::date < to_date(('01-'::text || (VALUE)::text), 'DD-MM-YYYY'::text)))
	CONSTRAINT format_check CHECK ((3 = "position"((VALUE)::text, '-'::text)));


ALTER DOMAIN public."mesaño" OWNER TO postgres;

--
-- TOC entry 237 (class 1255 OID 18660)
-- Name: calcular_recargo(integer, integer, date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.calcular_recargo(inmueble integer, cliente integer, fecha_cuota date) RETURNS double precision
    LANGUAGE plpgsql
    AS $$ 
DECLARE v_recargo double precision = 0;
DECLARE v_monto precios.monto%TYPE;
DECLARE porcentaje_recargo double precision = 0.01;
DECLARE diferencia_de_dias integer = 0;
DECLARE v_fecha_vencimiento date;
BEGIN
--Obtengo el monto a cobrar
select monto from precioAlquiler into v_monto
where id_inmueble = inmueble 
and id_cliente = cliente
and date_part('MONTH', age(fechaDefinicion, fehca_cuota)) <= 0 
order by date_part('MONTH', age(fechaDefinicion, fecha_cuota)) asc;

select fechaVencimiento INTO v_fecha_vencimiento from cuotas
where id_inmueble = inmueble 
and id_cliente = cliente
and mesaño = fecha_cuota;

diferencia_de_dias = date_part('DAY', age(current_date, fecha_vencimiento));
IF  diferencia_de_dias > 0 THEN
	v_recargo = diferencia_de_dias * (v_monto * porcentaje_recargo);
END IF;

RETURN v_recargo;
END;
$$;


ALTER FUNCTION public.calcular_recargo(inmueble integer, cliente integer, fecha_cuota date) OWNER TO postgres;

--
-- TOC entry 254 (class 1255 OID 18671)
-- Name: sp_actualizar_periodo_ocupacion(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sp_actualizar_periodo_ocupacion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE v_motivo_baja periodoOcupacion.motivoBaja%TYPE;
BEGIN
IF NEW.id_estado = OLD.id_estado THEN
	RETURN NEW;
ELSEIF NEW.id_estado <> 1 AND old.id_estado = 1 THEN --SI es 1 estaba activo
	SELECT descripcion INTO v_motivo_baja FROM contratos_estados WHERE id_estado = new.id_estado; 
	
	UPDATE periodoocupacion
	SET fechabaja=CURRENT_DATE, motivobaja=v_motivo_baja
	WHERE id_inmueble= OLD.id_inmueble and fechaInicio = OLD.fechaContrato;
	RETURN NEW;
ELSEIF NEW.id_estado = 1 AND OLD.id_estado <> 1 THEN
	IF EXISTS (select * from periodoOcupacion WHERE id_inmueble = OLD.id_inmueble 
			   AND fechaBaja IS NULL) THEN
		RAISE NOTICE 'No se permite abrir un contrato cuando ya se abrio otro posteriormente';
		RETURN NULL; -- NO Permito abrir un contrato cuando se abrio otro mas actual
	ELSE 
		UPDATE periodoocupacion
		SET fechabaja=NULL, motivobaja=NULL
		WHERE id_inmueble= OLD.id_inmueble and fechaInicio = OLD.fechaContrato;
	END IF;
END IF;

RETURN NEW;

END;
$$;


ALTER FUNCTION public.sp_actualizar_periodo_ocupacion() OWNER TO postgres;

--
-- TOC entry 238 (class 1255 OID 18661)
-- Name: sp_actualizar_usuario_y_tiempo(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sp_actualizar_usuario_y_tiempo() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
NEW.ultimo_usuario = CURRENT_USER;
NEW.ultimo_horario = CURRENT_TIMESTAMP;
RETURN NEW;
END;
$$;


ALTER FUNCTION public.sp_actualizar_usuario_y_tiempo() OWNER TO postgres;

--
-- TOC entry 240 (class 1255 OID 18664)
-- Name: sp_autoincremental_control(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sp_autoincremental_control() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE v_contador integer = 1; 
DECLARE v_id_valido inmuebles.id_inmueble%TYPE;
BEGIN
--chequeo si es la primera fila
IF NOT EXISTS(select * from inmuebles) THEN
	NEW.id_inmueble = 1000;

	
ELSEIF NEW.id_inmueble IS NULL THEN
	select id_inmueble+v_contador INTO v_id_valido FROM inmuebles 
	order by ultimo_horario DESC LIMIT 1;
	WHILE EXISTS ( select id_inmueble FROM inmuebles where id_inmueble = v_id_valido) LOOP
		v_contador = v_contador + 1;
		select id_inmueble+v_contador INTO v_id_valido FROM inmuebles 
		order by ultimo_horario DESC LIMIT 1;
	END LOOP;
	new.id_inmueble = v_id_valido;

--En este caso no viene nulo y no es la primera fila
ELSEIF EXISTS (select id_inmueble from inmuebles where id_inmueble = NEW.id_inmueble) THEN
		RETURN NULL;

END IF;
RETURN NEW;
END;
$$;


ALTER FUNCTION public.sp_autoincremental_control() OWNER TO postgres;

--
-- TOC entry 234 (class 1255 OID 18702)
-- Name: sp_convertir_date_mesaño(date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public."sp_convertir_date_mesaño"(fecha date) RETURNS public."mesaño"
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN right(to_char(fecha, 'DD-MM-YYYY'), 7);
END;
$$;


ALTER FUNCTION public."sp_convertir_date_mesaño"(fecha date) OWNER TO postgres;

--
-- TOC entry 253 (class 1255 OID 18669)
-- Name: sp_crear_periodo_ocupacion(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sp_crear_periodo_ocupacion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
	INSERT INTO periodoocupacion(id_inmueble, fechainicio, fechabaja, motivobaja)
	VALUES (NEW.id_inmueble, NEW.fechaContrato, NULL, NULL);
	RETURN NEW;
END;
$$;


ALTER FUNCTION public.sp_crear_periodo_ocupacion() OWNER TO postgres;

--
-- TOC entry 235 (class 1255 OID 18658)
-- Name: sp_esta_paga(integer, integer, public."mesaño"); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sp_esta_paga(v_cliente integer, v_inmueble integer, "v_mesaño" public."mesaño") RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE v_vencimiento date;
BEGIN
	
	SELECT fechavencimiento INTO v_vencimiento FROM Cuotas
	WHERE v_cliente = Cuotas.id_cliente
	AND v_inmueble = Cuotas.id_inmueble
	AND v_mesaño = Cuotas.mesaño;
	
	IF EXISTS (SELECT * FROM pagos
	WHERE v_cliente = pagos.id_cliente
	AND v_inmueble = pagos.id_inmueble
	AND v_mesaño = pagos.mesaño)
	THEN
		RETURN 'Pagada';
	ELSE
		IF (v_vencimiento < CURRENT_DATE) THEN
			RETURN 'Vencida';
		ELSE
			RETURN 'Impaga';
		END IF;
	END IF;

RETURN 'No existe la cuota.';
END;
$$;


ALTER FUNCTION public.sp_esta_paga(v_cliente integer, v_inmueble integer, "v_mesaño" public."mesaño") OWNER TO postgres;

--
-- TOC entry 252 (class 1255 OID 18668)
-- Name: sp_modificar_nombre_cliente(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sp_modificar_nombre_cliente() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
	
	UPDATE Personas SET nombreCompleto = new.nombreCompleto
	FROM Clientes
	WHERE clientes.id_persona = personas.id_persona and clientes.id_cliente = old.id_cliente;

RETURN new;
END;
$$;


ALTER FUNCTION public.sp_modificar_nombre_cliente() OWNER TO postgres;

--
-- TOC entry 255 (class 1255 OID 18710)
-- Name: sp_obtener_importe_cuota(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sp_obtener_importe_cuota() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE v_cantidad_importes integer = 0;
BEGIN

	IF NOT EXISTS (select importe INTO NEW.importe from precioAlquiler 
					where id_inmueble = inmueble 
					and id_cliente = cliente)
		THEN
			RAISE NOTICE 'No se puede determinar el importe para la cuota ya que no hay ningun precio para el contrato';
			RETURN NULL;
	ELSE
		SELECT COUNT(importe)INTO v_cantidad_importes FROM precioAlquiler 
		where id_inmueble = NEW.id_inmueble 
		and id_cliente = NEW.id_cliente;
		
		IF (v_cantidad_importes <= 1) THEN
			--solo existe el precio inicial, no aplico logica de definicion de importe
			select importe INTO NEW.importe from precioAlquiler 
			where id_inmueble = NEW.id_inmueble 
			and id_cliente = NEW.id_cliente;
		ELSE--aca existen varios prebios, aplico logica
			select importe INTO NEW.importe from precioAlquiler 
			where id_inmueble = NEW.id_inmueble 
			and id_cliente = NEW.id_cliente
			and date_part('MONTH', age(fechaDefinicion, SP_convertir_mesaño_date(NEW.mesaño))) <= 0 
			order by date_part('MONTH', age(fechaDefinicion, SP_convertir_mesaño_date(NEW.mesaño))) DESC
			LIMIT 1;
		END IF;
	END IF;
	RETURN NEW;
END;
$$;


ALTER FUNCTION public.sp_obtener_importe_cuota() OWNER TO postgres;

--
-- TOC entry 239 (class 1255 OID 18704)
-- Name: sp_obtener_importe_cuota(integer, integer, public."mesaño"); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sp_obtener_importe_cuota(v_inmueble integer, v_cliente integer, fechacontable public."mesaño") RETURNS double precision
    LANGUAGE plpgsql
    AS $$
DECLARE v_importe double precision = 0;
BEGIN
	select importe INTO v_importe from precioAlquiler 
	where id_inmueble = inmueble 
	and id_cliente = cliente
	and date_part('MONTH', age(fechaDefinicion, SP_convertir_mesaño_date(fecha_cuota))) <= 0 
	order by date_part('MONTH', age(fechaDefinicion, SP_convertir_mesaño_date(fecha_cuota))) DESC;
	
	RETURN v_importe;
END;
$$;


ALTER FUNCTION public.sp_obtener_importe_cuota(v_inmueble integer, v_cliente integer, fechacontable public."mesaño") OWNER TO postgres;

--
-- TOC entry 236 (class 1255 OID 18659)
-- Name: sp_obtener_importe_por_tipo(integer, integer, public."mesaño", integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sp_obtener_importe_por_tipo(inmueble integer, cliente integer, "mes_año" public."mesaño", operacion integer) RETURNS double precision
    LANGUAGE plpgsql
    AS $$
DECLARE resultado double precision = 0.00;
DECLARE tipo_operacion integer;
BEGIN

IF operacion = 1 THEN
	select importe INTO resultado from cuotas
	where id_inmueble = inmueble AND id_cliente = cliente AND mesaño LIKE mes_año;
	select id_tipo_operacion INTO tipo_operacion FROM cuotas;
	
ELSEIF operacion = 2 THEN
	select importeCuota INTO resultado from pagos
	where id_inmueble = inmueble AND id_cliente = cliente AND mesaño LIKE mes_año;
	select id_tipo_operacion INTO tipo_operacion FROM pagos;
	
ELSEIF operacion = 3 THEN
	select importeRecargo INTO resultado from recargos
	where id_inmueble = inmueble AND id_cliente = cliente AND mesaño LIKE mes_año;
	select id_tipo_operacion INTO tipo_operacion FROM recargos;
END IF;

IF tipo_operacion = 1 THEN
	--Es Debito
	resultado = resultado * -1;
END IF;

RETURN resultado;
END;
$$;


ALTER FUNCTION public.sp_obtener_importe_por_tipo(inmueble integer, cliente integer, "mes_año" public."mesaño", operacion integer) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 205 (class 1259 OID 18372)
-- Name: anuncios; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.anuncios (
    id_anuncio integer NOT NULL,
    titulo character varying(50) NOT NULL,
    texto character varying(100) NOT NULL,
    fecha date NOT NULL,
    vigencia integer NOT NULL,
    tipo_vigencia character(1) NOT NULL
);


ALTER TABLE public.anuncios OWNER TO postgres;

--
-- TOC entry 200 (class 1259 OID 18339)
-- Name: auditoria; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auditoria (
    ultimo_usuario character varying(50) NOT NULL,
    ultimo_horario timestamp without time zone NOT NULL
);


ALTER TABLE public.auditoria OWNER TO postgres;

--
-- TOC entry 212 (class 1259 OID 18420)
-- Name: clientes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.clientes (
    id_cliente integer NOT NULL,
    id_persona integer NOT NULL
);


ALTER TABLE public.clientes OWNER TO postgres;

--
-- TOC entry 219 (class 1259 OID 18507)
-- Name: contratoalquiler; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contratoalquiler (
    id_inmueble integer NOT NULL,
    id_cliente integer NOT NULL,
    fechacontrato date DEFAULT CURRENT_DATE NOT NULL,
    id_estado integer DEFAULT 1 NOT NULL,
    periodo_vigencia integer NOT NULL,
    vencimiento_cuota integer DEFAULT 10 NOT NULL,
    id_finalidad integer,
    precio_inicial double precision NOT NULL
);


ALTER TABLE public.contratoalquiler OWNER TO postgres;

--
-- TOC entry 218 (class 1259 OID 18502)
-- Name: contratos_estados; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contratos_estados (
    id_estado integer NOT NULL,
    descripcion character varying(50)
);


ALTER TABLE public.contratos_estados OWNER TO postgres;

--
-- TOC entry 217 (class 1259 OID 18497)
-- Name: contratos_finalidades; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contratos_finalidades (
    id_finalidad integer NOT NULL,
    descripcion character varying(50) NOT NULL
);


ALTER TABLE public.contratos_finalidades OWNER TO postgres;

--
-- TOC entry 224 (class 1259 OID 18602)
-- Name: cuotas; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cuotas (
    id_inmueble integer NOT NULL,
    id_cliente integer NOT NULL,
    id_tipo_operacion integer NOT NULL,
    "mesaño" public."mesaño" NOT NULL,
    importe double precision,
    fechavencimiento date NOT NULL
);


ALTER TABLE public.cuotas OWNER TO postgres;

--
-- TOC entry 211 (class 1259 OID 18407)
-- Name: personas; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.personas (
    id_persona integer NOT NULL,
    dni public.dni NOT NULL,
    fechanacimiento date,
    fechainscripcion date,
    nombrecompleto character varying(50),
    id_direccion integer
);


ALTER TABLE public.personas OWNER TO postgres;

--
-- TOC entry 201 (class 1259 OID 18342)
-- Name: tipo_operacion_contable; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tipo_operacion_contable (
    id_tipo_operacion integer NOT NULL,
    descripcion character varying(50),
    debito boolean
);


ALTER TABLE public.tipo_operacion_contable OWNER TO postgres;

--
-- TOC entry 230 (class 1259 OID 18683)
-- Name: cuota_cta_cte; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.cuota_cta_cte AS
 SELECT cuotas.id_cliente,
    personas.nombrecompleto,
    cuotas."mesaño",
    tipo_operacion_contable.descripcion,
    public.sp_obtener_importe_por_tipo(cuotas.id_inmueble, cuotas.id_cliente, cuotas."mesaño", 1) AS importe
   FROM (((public.cuotas
     JOIN public.tipo_operacion_contable ON ((cuotas.id_tipo_operacion = tipo_operacion_contable.id_tipo_operacion)))
     JOIN public.clientes ON ((clientes.id_cliente = cuotas.id_cliente)))
     JOIN public.personas ON ((clientes.id_persona = personas.id_persona)));


ALTER TABLE public.cuota_cta_cte OWNER TO postgres;

--
-- TOC entry 223 (class 1259 OID 18578)
-- Name: pagos; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pagos (
    id_inmueble integer NOT NULL,
    id_cliente integer NOT NULL,
    "mesaño" public."mesaño" NOT NULL,
    id_tipo_operacion integer NOT NULL,
    importecuota double precision NOT NULL,
    fechapago date DEFAULT CURRENT_DATE NOT NULL
);


ALTER TABLE public.pagos OWNER TO postgres;

--
-- TOC entry 231 (class 1259 OID 18688)
-- Name: pago_cta_cte; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.pago_cta_cte AS
 SELECT pagos.id_cliente,
    personas.nombrecompleto,
    pagos."mesaño",
    tipo_operacion_contable.descripcion,
    public.sp_obtener_importe_por_tipo(pagos.id_inmueble, pagos.id_cliente, pagos."mesaño", 2) AS importe
   FROM (((public.pagos
     JOIN public.tipo_operacion_contable ON ((pagos.id_tipo_operacion = tipo_operacion_contable.id_tipo_operacion)))
     JOIN public.clientes ON ((clientes.id_cliente = pagos.id_cliente)))
     JOIN public.personas ON ((clientes.id_persona = personas.id_persona)));


ALTER TABLE public.pago_cta_cte OWNER TO postgres;

--
-- TOC entry 225 (class 1259 OID 18625)
-- Name: recargos; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recargos (
    id_inmueble integer NOT NULL,
    id_cliente integer NOT NULL,
    "mesaño" public."mesaño" NOT NULL,
    id_tipo_operacion integer NOT NULL,
    importerecargo double precision NOT NULL,
    diasvencidos integer DEFAULT 0
);


ALTER TABLE public.recargos OWNER TO postgres;

--
-- TOC entry 232 (class 1259 OID 18693)
-- Name: recargo_cta_cte; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.recargo_cta_cte AS
 SELECT recargos.id_cliente,
    personas.nombrecompleto,
    recargos."mesaño",
    tipo_operacion_contable.descripcion,
    public.sp_obtener_importe_por_tipo(recargos.id_inmueble, recargos.id_cliente, recargos."mesaño", 3) AS importe
   FROM (((public.recargos
     JOIN public.tipo_operacion_contable ON ((recargos.id_tipo_operacion = tipo_operacion_contable.id_tipo_operacion)))
     JOIN public.clientes ON ((clientes.id_cliente = recargos.id_cliente)))
     JOIN public.personas ON ((clientes.id_persona = personas.id_persona)));


ALTER TABLE public.recargo_cta_cte OWNER TO postgres;

--
-- TOC entry 233 (class 1259 OID 18698)
-- Name: cta_cte_cliente; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.cta_cte_cliente AS
 SELECT cta_cte.id_cliente,
    cta_cte.nombrecompleto,
    cta_cte."mesaño",
    cta_cte.descripcion,
    cta_cte.importe
   FROM ( SELECT cuota_cta_cte.id_cliente,
            cuota_cta_cte.nombrecompleto,
            cuota_cta_cte."mesaño",
            cuota_cta_cte.descripcion,
            cuota_cta_cte.importe
           FROM public.cuota_cta_cte
        UNION
         SELECT pago_cta_cte.id_cliente,
            pago_cta_cte.nombrecompleto,
            pago_cta_cte."mesaño",
            pago_cta_cte.descripcion,
            pago_cta_cte.importe
           FROM public.pago_cta_cte
        UNION
         SELECT recargo_cta_cte.id_cliente,
            recargo_cta_cte.nombrecompleto,
            recargo_cta_cte."mesaño",
            recargo_cta_cte.descripcion,
            recargo_cta_cte.importe
           FROM public.recargo_cta_cte) cta_cte
  ORDER BY cta_cte.id_cliente;


ALTER TABLE public.cta_cte_cliente OWNER TO postgres;

--
-- TOC entry 204 (class 1259 OID 18362)
-- Name: direcciones; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.direcciones (
    id_direccion integer NOT NULL,
    id_localidad integer NOT NULL,
    calle character varying(50) NOT NULL,
    numero integer NOT NULL,
    departamento character varying(10),
    piso integer,
    observaciones character varying(100)
);


ALTER TABLE public.direcciones OWNER TO postgres;

--
-- TOC entry 203 (class 1259 OID 18352)
-- Name: localidades; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.localidades (
    id_localidad integer NOT NULL,
    nombre character varying(50) NOT NULL,
    codigo_postal integer,
    id_provincia integer NOT NULL
);


ALTER TABLE public.localidades OWNER TO postgres;

--
-- TOC entry 202 (class 1259 OID 18347)
-- Name: localizaciones; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.localizaciones (
    id_localizacion integer NOT NULL,
    provincia character varying(50) NOT NULL
);


ALTER TABLE public.localizaciones OWNER TO postgres;

--
-- TOC entry 226 (class 1259 OID 18650)
-- Name: direccion_completa; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.direccion_completa AS
 SELECT d.id_direccion,
    d.calle,
    d.numero,
    d.departamento,
    d.piso,
    d.observaciones,
    l.nombre,
    l.codigo_postal,
    loca.provincia
   FROM ((public.direcciones d
     JOIN public.localidades l ON ((d.id_localidad = l.id_localidad)))
     JOIN public.localizaciones loca ON ((l.id_provincia = loca.id_localizacion)));


ALTER TABLE public.direccion_completa OWNER TO postgres;

--
-- TOC entry 206 (class 1259 OID 18377)
-- Name: divisas; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.divisas (
    id_divisa integer NOT NULL,
    acronimo character varying(3) NOT NULL,
    descripcion character varying(50) NOT NULL
);


ALTER TABLE public.divisas OWNER TO postgres;

--
-- TOC entry 213 (class 1259 OID 18432)
-- Name: dueños; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."dueños" (
    "id_dueño" integer NOT NULL,
    id_persona integer NOT NULL
);


ALTER TABLE public."dueños" OWNER TO postgres;

--
-- TOC entry 221 (class 1259 OID 18540)
-- Name: garante; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.garante (
    dni public.dni NOT NULL,
    id_inmueble integer NOT NULL,
    id_cliente integer NOT NULL,
    nombre character varying(50) NOT NULL,
    fechanacimiento date NOT NULL,
    id_tipogarantia integer NOT NULL
);


ALTER TABLE public.garante OWNER TO postgres;

--
-- TOC entry 214 (class 1259 OID 18444)
-- Name: inmuebles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inmuebles (
    id_inmueble integer NOT NULL,
    id_tipoinmueble integer NOT NULL,
    id_tipooperacion integer NOT NULL,
    id_estado_inmueble integer NOT NULL,
    id_direccion integer NOT NULL,
    id_anuncio integer NOT NULL,
    id_precio integer NOT NULL,
    "id_dueño" integer NOT NULL
)
INHERITS (public.auditoria);


ALTER TABLE public.inmuebles OWNER TO postgres;

--
-- TOC entry 216 (class 1259 OID 18486)
-- Name: periodoocupacion; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.periodoocupacion (
    id_periodo integer NOT NULL,
    id_inmueble integer NOT NULL,
    fechainicio date NOT NULL,
    fechabaja date,
    motivobaja character varying(100)
);


ALTER TABLE public.periodoocupacion OWNER TO postgres;

--
-- TOC entry 207 (class 1259 OID 18382)
-- Name: precios; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.precios (
    id_precio integer NOT NULL,
    id_divisa integer NOT NULL,
    monto double precision NOT NULL
);


ALTER TABLE public.precios OWNER TO postgres;

--
-- TOC entry 227 (class 1259 OID 18654)
-- Name: precio_inmueble; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.precio_inmueble AS
 SELECT p.id_precio,
    p.monto,
    d.acronimo
   FROM (public.precios p
     JOIN public.divisas d ON ((p.id_divisa = d.id_divisa)));


ALTER TABLE public.precio_inmueble OWNER TO postgres;

--
-- TOC entry 208 (class 1259 OID 18392)
-- Name: tipoinmueble; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tipoinmueble (
    id_tipo integer NOT NULL,
    descripcion character varying(50) NOT NULL
);


ALTER TABLE public.tipoinmueble OWNER TO postgres;

--
-- TOC entry 209 (class 1259 OID 18397)
-- Name: tipooperacion; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tipooperacion (
    id_operacion integer NOT NULL,
    descripcion character varying(50) NOT NULL
);


ALTER TABLE public.tipooperacion OWNER TO postgres;

--
-- TOC entry 228 (class 1259 OID 18673)
-- Name: info_inmuebles_completa; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.info_inmuebles_completa AS
 SELECT inmuebles.id_inmueble,
    tipo.descripcion,
    anu.titulo,
    pre.monto,
    pre.acronimo,
    per.nombrecompleto,
        CASE
            WHEN (1 = ( SELECT tipooperacion.id_operacion
               FROM public.tipooperacion
              WHERE ((inmuebles.id_inmueble = inmuebles.id_inmueble) AND (tipooperacion.id_operacion = 1)))) THEN 'SI'::text
            ELSE 'NO'::text
        END AS se_vende,
        CASE
            WHEN (2 = ( SELECT tipooperacion.id_operacion
               FROM public.tipooperacion
              WHERE ((inmuebles.id_inmueble = inmuebles.id_inmueble) AND (tipooperacion.id_operacion = 2)))) THEN 'SI'::text
            ELSE 'NO'::text
        END AS se_alquila,
        CASE
            WHEN ((2 = ( SELECT tipooperacion.id_operacion
               FROM public.tipooperacion
              WHERE ((inmuebles.id_inmueble = inmuebles.id_inmueble) AND (tipooperacion.id_operacion = 2)))) AND (( SELECT periodoocupacion.fechabaja
               FROM public.periodoocupacion) <> NULL::date)) THEN 'OCUPADO'::text
            ELSE 'LIBRE'::text
        END AS estado_alquiler,
        CASE
            WHEN ((2 = ( SELECT tipooperacion.id_operacion
               FROM public.tipooperacion
              WHERE ((inmuebles.id_inmueble = inmuebles.id_inmueble) AND (tipooperacion.id_operacion = 2)))) AND (( SELECT periodoocupacion.fechabaja
               FROM public.periodoocupacion) <> NULL::date)) THEN ( SELECT periodoocupacion.fechabaja
               FROM public.periodoocupacion
              WHERE (periodoocupacion.id_inmueble = inmuebles.id_inmueble))
            ELSE NULL::date
        END AS fecha_desocupacion,
    direc.id_direccion,
    direc.calle,
    direc.numero,
    direc.departamento,
    direc.piso,
    direc.observaciones,
    direc.nombre,
    direc.codigo_postal,
    direc.provincia
   FROM ((((((public.inmuebles
     JOIN public.direccion_completa direc ON ((direc.id_direccion = inmuebles.id_direccion)))
     JOIN public."dueños" due ON ((due."id_dueño" = inmuebles."id_dueño")))
     JOIN public.personas per ON ((per.id_persona = due.id_persona)))
     JOIN public.anuncios anu ON ((anu.id_anuncio = inmuebles.id_anuncio)))
     JOIN public.precio_inmueble pre ON ((pre.id_precio = inmuebles.id_precio)))
     JOIN public.tipoinmueble tipo ON ((tipo.id_tipo = inmuebles.id_tipoinmueble)));


ALTER TABLE public.info_inmuebles_completa OWNER TO postgres;

--
-- TOC entry 229 (class 1259 OID 18678)
-- Name: informacion_cuotas; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.informacion_cuotas AS
 SELECT per.id_persona,
    per.dni,
    per.fechanacimiento,
    per.fechainscripcion,
    per.nombrecompleto,
    per.id_direccion,
    cuo."mesaño",
    public.sp_esta_paga(ca.id_cliente, ca.id_inmueble, cuo."mesaño") AS sp_esta_paga
   FROM ((((public.contratoalquiler ca
     JOIN public.info_inmuebles_completa iic ON ((iic.id_inmueble = ca.id_inmueble)))
     JOIN public.clientes cli ON ((cli.id_cliente = ca.id_cliente)))
     JOIN public.personas per ON ((per.id_persona = cli.id_persona)))
     JOIN public.cuotas cuo ON (((cuo.id_inmueble = iic.id_inmueble) AND (cuo.id_cliente = ca.id_cliente))))
  WHERE (ca.id_estado = 1);


ALTER TABLE public.informacion_cuotas OWNER TO postgres;

--
-- TOC entry 210 (class 1259 OID 18402)
-- Name: inmuebles_estados; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.inmuebles_estados (
    id_estado integer NOT NULL,
    descripcion character varying(50) NOT NULL
);


ALTER TABLE public.inmuebles_estados OWNER TO postgres;

--
-- TOC entry 215 (class 1259 OID 18484)
-- Name: periodoocupacion_id_periodo_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.periodoocupacion_id_periodo_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.periodoocupacion_id_periodo_seq OWNER TO postgres;

--
-- TOC entry 3267 (class 0 OID 0)
-- Dependencies: 215
-- Name: periodoocupacion_id_periodo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.periodoocupacion_id_periodo_seq OWNED BY public.periodoocupacion.id_periodo;


--
-- TOC entry 222 (class 1259 OID 18563)
-- Name: precioalquiler; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.precioalquiler (
    id_inmueble integer NOT NULL,
    id_cliente integer NOT NULL,
    importe double precision NOT NULL,
    fechadefinicion date NOT NULL
);


ALTER TABLE public.precioalquiler OWNER TO postgres;

--
-- TOC entry 220 (class 1259 OID 18535)
-- Name: tipogarantia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tipogarantia (
    id_garantia integer NOT NULL,
    descripcion character varying(50) NOT NULL
);


ALTER TABLE public.tipogarantia OWNER TO postgres;

--
-- TOC entry 3003 (class 2604 OID 18489)
-- Name: periodoocupacion id_periodo; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.periodoocupacion ALTER COLUMN id_periodo SET DEFAULT nextval('public.periodoocupacion_id_periodo_seq'::regclass);


--
-- TOC entry 3241 (class 0 OID 18372)
-- Dependencies: 205
-- Data for Name: anuncios; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.anuncios (id_anuncio, titulo, texto, fecha, vigencia, tipo_vigencia) FROM stdin;
1	Venta Casa	Vendo casa	2021-01-20	30	D
2	Alquiler Dpto	Alquilo Dpto	2021-03-21	15	D
3	Alquilo casa roja	La pinte yo	2020-02-28	10	D
4	Alquiler dpto rosa	Info al DM	2020-11-04	5	D
\.


--
-- TOC entry 3236 (class 0 OID 18339)
-- Dependencies: 200
-- Data for Name: auditoria; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auditoria (ultimo_usuario, ultimo_horario) FROM stdin;
\.


--
-- TOC entry 3248 (class 0 OID 18420)
-- Dependencies: 212
-- Data for Name: clientes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.clientes (id_cliente, id_persona) FROM stdin;
1	10
2	11
3	12
\.


--
-- TOC entry 3255 (class 0 OID 18507)
-- Dependencies: 219
-- Data for Name: contratoalquiler; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contratoalquiler (id_inmueble, id_cliente, fechacontrato, id_estado, periodo_vigencia, vencimiento_cuota, id_finalidad, precio_inicial) FROM stdin;
1000	1	2021-05-20	1	6	44510	2	1500
1002	3	2021-05-26	1	6	44510	2	1500
\.


--
-- TOC entry 3254 (class 0 OID 18502)
-- Dependencies: 218
-- Data for Name: contratos_estados; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contratos_estados (id_estado, descripcion) FROM stdin;
1	Activo
2	Finalizado
3	Baja a pedido del cliente
4	Baja a pedido del dueño
\.


--
-- TOC entry 3253 (class 0 OID 18497)
-- Dependencies: 217
-- Data for Name: contratos_finalidades; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contratos_finalidades (id_finalidad, descripcion) FROM stdin;
1	Vacaciones
2	Ocupacion temporal
3	Negocios
4	otros
\.


--
-- TOC entry 3260 (class 0 OID 18602)
-- Dependencies: 224
-- Data for Name: cuotas; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.cuotas (id_inmueble, id_cliente, id_tipo_operacion, "mesaño", importe, fechavencimiento) FROM stdin;
\.


--
-- TOC entry 3240 (class 0 OID 18362)
-- Dependencies: 204
-- Data for Name: direcciones; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.direcciones (id_direccion, id_localidad, calle, numero, departamento, piso, observaciones) FROM stdin;
1	1	Division de los Andes	1276	\N	\N	Porton Negro
2	1	Victorio Camerano	2052	\N	\N	Porton Azul
3	7	Los Pinos	111	B	3	No tiene porton
\.


--
-- TOC entry 3242 (class 0 OID 18377)
-- Dependencies: 206
-- Data for Name: divisas; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.divisas (id_divisa, acronimo, descripcion) FROM stdin;
1	USD	Dolares
2	ARS	Pesos
3	EUR	Euros
4	JPY	Yenes
\.


--
-- TOC entry 3249 (class 0 OID 18432)
-- Dependencies: 213
-- Data for Name: dueños; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."dueños" ("id_dueño", id_persona) FROM stdin;
2	11
\.


--
-- TOC entry 3257 (class 0 OID 18540)
-- Dependencies: 221
-- Data for Name: garante; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.garante (dni, id_inmueble, id_cliente, nombre, fechanacimiento, id_tipogarantia) FROM stdin;
\.


--
-- TOC entry 3250 (class 0 OID 18444)
-- Dependencies: 214
-- Data for Name: inmuebles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.inmuebles (ultimo_usuario, ultimo_horario, id_inmueble, id_tipoinmueble, id_tipooperacion, id_estado_inmueble, id_direccion, id_anuncio, id_precio, "id_dueño") FROM stdin;
postgres	2021-05-28 19:54:29.304349	1000	101	1	1	3	1	1	2
postgres	2021-05-28 19:54:29.304349	1002	102	2	2	1	2	2	2
postgres	2021-05-28 19:54:29.304349	1003	103	2	1	3	3	3	2
\.


--
-- TOC entry 3246 (class 0 OID 18402)
-- Dependencies: 210
-- Data for Name: inmuebles_estados; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.inmuebles_estados (id_estado, descripcion) FROM stdin;
1	Anulado
2	Disponible
3	Alquilado
4	Vendido
\.


--
-- TOC entry 3239 (class 0 OID 18352)
-- Dependencies: 203
-- Data for Name: localidades; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.localidades (id_localidad, nombre, codigo_postal, id_provincia) FROM stdin;
1	Parana	3100	10
2	Cordoba	5800	11
3	Misiones	3300	12
4	Villa Carlos Paz	5800	11
5	Santa Fe	3000	14
6	Rosario	3000	14
7	Oro Verde	3100	10
\.


--
-- TOC entry 3238 (class 0 OID 18347)
-- Dependencies: 202
-- Data for Name: localizaciones; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.localizaciones (id_localizacion, provincia) FROM stdin;
10	Entre Rios
11	Cordoba
12	Misiones
13	Buenos Aires
14	Santa Fe
15	La Pampa
16	Jujuy
17	Neuquen
\.


--
-- TOC entry 3259 (class 0 OID 18578)
-- Dependencies: 223
-- Data for Name: pagos; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pagos (id_inmueble, id_cliente, "mesaño", id_tipo_operacion, importecuota, fechapago) FROM stdin;
\.


--
-- TOC entry 3252 (class 0 OID 18486)
-- Dependencies: 216
-- Data for Name: periodoocupacion; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.periodoocupacion (id_periodo, id_inmueble, fechainicio, fechabaja, motivobaja) FROM stdin;
11	1000	2021-05-20	\N	\N
12	1002	2021-05-26	\N	\N
\.


--
-- TOC entry 3247 (class 0 OID 18407)
-- Dependencies: 211
-- Data for Name: personas; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.personas (id_persona, dni, fechanacimiento, fechainscripcion, nombrecompleto, id_direccion) FROM stdin;
10	41154249	1998-11-20	2021-05-24	Matias Nicolas Sotelo	1
11	39717392	1996-07-16	2021-01-01	Atilio Mariano Modenutti	2
12	42560204	1995-01-01	2021-05-01	Juan Ignacio Gerstner	3
\.


--
-- TOC entry 3258 (class 0 OID 18563)
-- Dependencies: 222
-- Data for Name: precioalquiler; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.precioalquiler (id_inmueble, id_cliente, importe, fechadefinicion) FROM stdin;
\.


--
-- TOC entry 3243 (class 0 OID 18382)
-- Dependencies: 207
-- Data for Name: precios; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.precios (id_precio, id_divisa, monto) FROM stdin;
1	2	5000
2	2	5500
3	4	15000
4	1	100
\.


--
-- TOC entry 3261 (class 0 OID 18625)
-- Dependencies: 225
-- Data for Name: recargos; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recargos (id_inmueble, id_cliente, "mesaño", id_tipo_operacion, importerecargo, diasvencidos) FROM stdin;
\.


--
-- TOC entry 3237 (class 0 OID 18342)
-- Dependencies: 201
-- Data for Name: tipo_operacion_contable; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tipo_operacion_contable (id_tipo_operacion, descripcion, debito) FROM stdin;
\.


--
-- TOC entry 3256 (class 0 OID 18535)
-- Dependencies: 220
-- Data for Name: tipogarantia; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tipogarantia (id_garantia, descripcion) FROM stdin;
1	Recibo de Sueldo
2	Titulo de propiedad
\.


--
-- TOC entry 3244 (class 0 OID 18392)
-- Dependencies: 208
-- Data for Name: tipoinmueble; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tipoinmueble (id_tipo, descripcion) FROM stdin;
101	Monoambiente
102	Duplex
103	Departamento
104	Casa
105	Cochera
106	Galpon
\.


--
-- TOC entry 3245 (class 0 OID 18397)
-- Dependencies: 209
-- Data for Name: tipooperacion; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tipooperacion (id_operacion, descripcion) FROM stdin;
1	Venta
2	Alquiler
\.


--
-- TOC entry 3268 (class 0 OID 0)
-- Dependencies: 215
-- Name: periodoocupacion_id_periodo_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.periodoocupacion_id_periodo_seq', 12, true);


--
-- TOC entry 3018 (class 2606 OID 18376)
-- Name: anuncios anuncios_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anuncios
    ADD CONSTRAINT anuncios_pkey PRIMARY KEY (id_anuncio);


--
-- TOC entry 3032 (class 2606 OID 18426)
-- Name: clientes clientes_id_cliente_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.clientes
    ADD CONSTRAINT clientes_id_cliente_key UNIQUE (id_cliente);


--
-- TOC entry 3034 (class 2606 OID 18424)
-- Name: clientes clientes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.clientes
    ADD CONSTRAINT clientes_pkey PRIMARY KEY (id_cliente, id_persona);


--
-- TOC entry 3048 (class 2606 OID 18514)
-- Name: contratoalquiler contratoalquiler_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contratoalquiler
    ADD CONSTRAINT contratoalquiler_pkey PRIMARY KEY (id_inmueble, id_cliente);


--
-- TOC entry 3046 (class 2606 OID 18506)
-- Name: contratos_estados contratos_estados_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contratos_estados
    ADD CONSTRAINT contratos_estados_pkey PRIMARY KEY (id_estado);


--
-- TOC entry 3044 (class 2606 OID 18501)
-- Name: contratos_finalidades contratos_finalidades_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contratos_finalidades
    ADD CONSTRAINT contratos_finalidades_pkey PRIMARY KEY (id_finalidad);


--
-- TOC entry 3058 (class 2606 OID 18609)
-- Name: cuotas cuotas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cuotas
    ADD CONSTRAINT cuotas_pkey PRIMARY KEY (id_inmueble, id_cliente, "mesaño");


--
-- TOC entry 3016 (class 2606 OID 18366)
-- Name: direcciones direcciones_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.direcciones
    ADD CONSTRAINT direcciones_pkey PRIMARY KEY (id_direccion);


--
-- TOC entry 3020 (class 2606 OID 18381)
-- Name: divisas divisas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.divisas
    ADD CONSTRAINT divisas_pkey PRIMARY KEY (id_divisa);


--
-- TOC entry 3036 (class 2606 OID 18438)
-- Name: dueños dueños_id_dueño_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."dueños"
    ADD CONSTRAINT "dueños_id_dueño_key" UNIQUE ("id_dueño");


--
-- TOC entry 3038 (class 2606 OID 18436)
-- Name: dueños dueños_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."dueños"
    ADD CONSTRAINT "dueños_pkey" PRIMARY KEY ("id_dueño", id_persona);


--
-- TOC entry 3052 (class 2606 OID 18547)
-- Name: garante garante_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.garante
    ADD CONSTRAINT garante_pkey PRIMARY KEY (id_inmueble, id_cliente, dni);


--
-- TOC entry 3028 (class 2606 OID 18406)
-- Name: inmuebles_estados inmuebles_estados_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inmuebles_estados
    ADD CONSTRAINT inmuebles_estados_pkey PRIMARY KEY (id_estado);


--
-- TOC entry 3040 (class 2606 OID 18448)
-- Name: inmuebles inmuebles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inmuebles
    ADD CONSTRAINT inmuebles_pkey PRIMARY KEY (id_inmueble);


--
-- TOC entry 3014 (class 2606 OID 18356)
-- Name: localidades localidades_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.localidades
    ADD CONSTRAINT localidades_pkey PRIMARY KEY (id_localidad);


--
-- TOC entry 3012 (class 2606 OID 18351)
-- Name: localizaciones localizaciones_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.localizaciones
    ADD CONSTRAINT localizaciones_pkey PRIMARY KEY (id_localizacion);


--
-- TOC entry 3056 (class 2606 OID 18586)
-- Name: pagos pagos_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pagos
    ADD CONSTRAINT pagos_pkey PRIMARY KEY (id_inmueble, id_cliente, "mesaño");


--
-- TOC entry 3042 (class 2606 OID 18491)
-- Name: periodoocupacion periodoocupacion_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.periodoocupacion
    ADD CONSTRAINT periodoocupacion_pkey PRIMARY KEY (id_periodo);


--
-- TOC entry 3030 (class 2606 OID 18414)
-- Name: personas personas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.personas
    ADD CONSTRAINT personas_pkey PRIMARY KEY (id_persona);


--
-- TOC entry 3054 (class 2606 OID 18567)
-- Name: precioalquiler precioalquiler_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.precioalquiler
    ADD CONSTRAINT precioalquiler_pkey PRIMARY KEY (id_inmueble, id_cliente);


--
-- TOC entry 3022 (class 2606 OID 18386)
-- Name: precios precios_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.precios
    ADD CONSTRAINT precios_pkey PRIMARY KEY (id_precio);


--
-- TOC entry 3060 (class 2606 OID 18633)
-- Name: recargos recargos_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recargos
    ADD CONSTRAINT recargos_pkey PRIMARY KEY (id_inmueble, id_cliente, "mesaño");


--
-- TOC entry 3010 (class 2606 OID 18346)
-- Name: tipo_operacion_contable tipo_operacion_contable_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipo_operacion_contable
    ADD CONSTRAINT tipo_operacion_contable_pkey PRIMARY KEY (id_tipo_operacion);


--
-- TOC entry 3050 (class 2606 OID 18539)
-- Name: tipogarantia tipogarantia_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipogarantia
    ADD CONSTRAINT tipogarantia_pkey PRIMARY KEY (id_garantia);


--
-- TOC entry 3024 (class 2606 OID 18396)
-- Name: tipoinmueble tipoinmueble_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipoinmueble
    ADD CONSTRAINT tipoinmueble_pkey PRIMARY KEY (id_tipo);


--
-- TOC entry 3026 (class 2606 OID 18401)
-- Name: tipooperacion tipooperacion_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipooperacion
    ADD CONSTRAINT tipooperacion_pkey PRIMARY KEY (id_operacion);


--
-- TOC entry 3096 (class 2620 OID 18672)
-- Name: contratoalquiler tg_actualizar_periodo_ocupacion; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tg_actualizar_periodo_ocupacion BEFORE UPDATE ON public.contratoalquiler FOR EACH ROW EXECUTE FUNCTION public.sp_actualizar_periodo_ocupacion();


--
-- TOC entry 3093 (class 2620 OID 18662)
-- Name: inmuebles tg_auditorio_modificacion; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tg_auditorio_modificacion BEFORE INSERT OR UPDATE ON public.inmuebles FOR EACH ROW EXECUTE FUNCTION public.sp_actualizar_usuario_y_tiempo();


--
-- TOC entry 3094 (class 2620 OID 18665)
-- Name: inmuebles tg_autoincremental_control; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tg_autoincremental_control BEFORE INSERT ON public.inmuebles FOR EACH ROW EXECUTE FUNCTION public.sp_autoincremental_control();


--
-- TOC entry 3095 (class 2620 OID 18670)
-- Name: contratoalquiler tg_crear_periodo_ocupacion; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tg_crear_periodo_ocupacion AFTER INSERT ON public.contratoalquiler FOR EACH ROW EXECUTE FUNCTION public.sp_crear_periodo_ocupacion();


--
-- TOC entry 3097 (class 2620 OID 18711)
-- Name: cuotas tg_obtener_importe_cuota; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tg_obtener_importe_cuota BEFORE INSERT ON public.cuotas FOR EACH ROW EXECUTE FUNCTION public.sp_obtener_importe_cuota();


--
-- TOC entry 3078 (class 2606 OID 18530)
-- Name: contratoalquiler contratoalquiler_id_estado_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contratoalquiler
    ADD CONSTRAINT contratoalquiler_id_estado_fkey FOREIGN KEY (id_estado) REFERENCES public.contratos_estados(id_estado);


--
-- TOC entry 3077 (class 2606 OID 18525)
-- Name: contratoalquiler contratoalquiler_id_finalidad_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contratoalquiler
    ADD CONSTRAINT contratoalquiler_id_finalidad_fkey FOREIGN KEY (id_finalidad) REFERENCES public.contratos_finalidades(id_finalidad);


--
-- TOC entry 3088 (class 2606 OID 18615)
-- Name: cuotas cuotas_id_cliente_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cuotas
    ADD CONSTRAINT cuotas_id_cliente_fkey FOREIGN KEY (id_cliente) REFERENCES public.clientes(id_cliente) ON DELETE CASCADE;


--
-- TOC entry 3087 (class 2606 OID 18610)
-- Name: cuotas cuotas_id_inmueble_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cuotas
    ADD CONSTRAINT cuotas_id_inmueble_fkey FOREIGN KEY (id_inmueble) REFERENCES public.inmuebles(id_inmueble) ON DELETE CASCADE;


--
-- TOC entry 3089 (class 2606 OID 18620)
-- Name: cuotas cuotas_id_tipo_operacion_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cuotas
    ADD CONSTRAINT cuotas_id_tipo_operacion_fkey FOREIGN KEY (id_tipo_operacion) REFERENCES public.tipo_operacion_contable(id_tipo_operacion);


--
-- TOC entry 3062 (class 2606 OID 18367)
-- Name: direcciones direcciones_id_localidad_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.direcciones
    ADD CONSTRAINT direcciones_id_localidad_fkey FOREIGN KEY (id_localidad) REFERENCES public.localidades(id_localidad);


--
-- TOC entry 3065 (class 2606 OID 18427)
-- Name: clientes fk_cliente_persona; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.clientes
    ADD CONSTRAINT fk_cliente_persona FOREIGN KEY (id_persona) REFERENCES public.personas(id_persona) ON DELETE CASCADE;


--
-- TOC entry 3076 (class 2606 OID 18520)
-- Name: contratoalquiler fk_contrato_cliente; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contratoalquiler
    ADD CONSTRAINT fk_contrato_cliente FOREIGN KEY (id_cliente) REFERENCES public.clientes(id_cliente) ON DELETE CASCADE;


--
-- TOC entry 3075 (class 2606 OID 18515)
-- Name: contratoalquiler fk_contrato_inmueble; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contratoalquiler
    ADD CONSTRAINT fk_contrato_inmueble FOREIGN KEY (id_inmueble) REFERENCES public.inmuebles(id_inmueble) ON DELETE CASCADE;


--
-- TOC entry 3064 (class 2606 OID 18415)
-- Name: personas fk_direccion; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.personas
    ADD CONSTRAINT fk_direccion FOREIGN KEY (id_direccion) REFERENCES public.direcciones(id_direccion);


--
-- TOC entry 3066 (class 2606 OID 18439)
-- Name: dueños fk_dueÑo_persona; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."dueños"
    ADD CONSTRAINT "fk_dueÑo_persona" FOREIGN KEY (id_persona) REFERENCES public.personas(id_persona) ON DELETE CASCADE;


--
-- TOC entry 3080 (class 2606 OID 18553)
-- Name: garante fk_garante_cliente; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.garante
    ADD CONSTRAINT fk_garante_cliente FOREIGN KEY (id_cliente) REFERENCES public.clientes(id_cliente) ON DELETE CASCADE;


--
-- TOC entry 3079 (class 2606 OID 18548)
-- Name: garante fk_garante_inmueble; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.garante
    ADD CONSTRAINT fk_garante_inmueble FOREIGN KEY (id_inmueble) REFERENCES public.inmuebles(id_inmueble) ON DELETE CASCADE;


--
-- TOC entry 3081 (class 2606 OID 18558)
-- Name: garante fk_garante_tipo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.garante
    ADD CONSTRAINT fk_garante_tipo FOREIGN KEY (id_tipogarantia) REFERENCES public.tipogarantia(id_garantia) ON DELETE CASCADE;


--
-- TOC entry 3071 (class 2606 OID 18469)
-- Name: inmuebles inmuebles_id_anuncio_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inmuebles
    ADD CONSTRAINT inmuebles_id_anuncio_fkey FOREIGN KEY (id_anuncio) REFERENCES public.anuncios(id_anuncio);


--
-- TOC entry 3070 (class 2606 OID 18464)
-- Name: inmuebles inmuebles_id_direccion_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inmuebles
    ADD CONSTRAINT inmuebles_id_direccion_fkey FOREIGN KEY (id_direccion) REFERENCES public.direcciones(id_direccion);


--
-- TOC entry 3073 (class 2606 OID 18479)
-- Name: inmuebles inmuebles_id_dueño_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inmuebles
    ADD CONSTRAINT "inmuebles_id_dueño_fkey" FOREIGN KEY ("id_dueño") REFERENCES public."dueños"("id_dueño");


--
-- TOC entry 3069 (class 2606 OID 18459)
-- Name: inmuebles inmuebles_id_estado_inmueble_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inmuebles
    ADD CONSTRAINT inmuebles_id_estado_inmueble_fkey FOREIGN KEY (id_estado_inmueble) REFERENCES public.inmuebles_estados(id_estado);


--
-- TOC entry 3072 (class 2606 OID 18474)
-- Name: inmuebles inmuebles_id_precio_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inmuebles
    ADD CONSTRAINT inmuebles_id_precio_fkey FOREIGN KEY (id_precio) REFERENCES public.precios(id_precio);


--
-- TOC entry 3067 (class 2606 OID 18449)
-- Name: inmuebles inmuebles_id_tipoinmueble_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inmuebles
    ADD CONSTRAINT inmuebles_id_tipoinmueble_fkey FOREIGN KEY (id_tipoinmueble) REFERENCES public.tipoinmueble(id_tipo);


--
-- TOC entry 3068 (class 2606 OID 18454)
-- Name: inmuebles inmuebles_id_tipooperacion_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.inmuebles
    ADD CONSTRAINT inmuebles_id_tipooperacion_fkey FOREIGN KEY (id_tipooperacion) REFERENCES public.tipooperacion(id_operacion);


--
-- TOC entry 3061 (class 2606 OID 18357)
-- Name: localidades localidades_id_provincia_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.localidades
    ADD CONSTRAINT localidades_id_provincia_fkey FOREIGN KEY (id_provincia) REFERENCES public.localizaciones(id_localizacion);


--
-- TOC entry 3085 (class 2606 OID 18592)
-- Name: pagos pagos_id_cliente_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pagos
    ADD CONSTRAINT pagos_id_cliente_fkey FOREIGN KEY (id_cliente) REFERENCES public.clientes(id_cliente) ON DELETE CASCADE;


--
-- TOC entry 3084 (class 2606 OID 18587)
-- Name: pagos pagos_id_inmueble_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pagos
    ADD CONSTRAINT pagos_id_inmueble_fkey FOREIGN KEY (id_inmueble) REFERENCES public.inmuebles(id_inmueble) ON DELETE CASCADE;


--
-- TOC entry 3086 (class 2606 OID 18597)
-- Name: pagos pagos_id_tipo_operacion_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pagos
    ADD CONSTRAINT pagos_id_tipo_operacion_fkey FOREIGN KEY (id_tipo_operacion) REFERENCES public.tipo_operacion_contable(id_tipo_operacion);


--
-- TOC entry 3074 (class 2606 OID 18492)
-- Name: periodoocupacion periodoocupacion_id_inmueble_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.periodoocupacion
    ADD CONSTRAINT periodoocupacion_id_inmueble_fkey FOREIGN KEY (id_inmueble) REFERENCES public.inmuebles(id_inmueble);


--
-- TOC entry 3083 (class 2606 OID 18573)
-- Name: precioalquiler precioalquiler_id_cliente_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.precioalquiler
    ADD CONSTRAINT precioalquiler_id_cliente_fkey FOREIGN KEY (id_cliente) REFERENCES public.clientes(id_cliente) ON DELETE CASCADE;


--
-- TOC entry 3082 (class 2606 OID 18568)
-- Name: precioalquiler precioalquiler_id_inmueble_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.precioalquiler
    ADD CONSTRAINT precioalquiler_id_inmueble_fkey FOREIGN KEY (id_inmueble) REFERENCES public.inmuebles(id_inmueble) ON DELETE CASCADE;


--
-- TOC entry 3063 (class 2606 OID 18387)
-- Name: precios precios_id_divisa_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.precios
    ADD CONSTRAINT precios_id_divisa_fkey FOREIGN KEY (id_divisa) REFERENCES public.divisas(id_divisa);


--
-- TOC entry 3091 (class 2606 OID 18639)
-- Name: recargos recargos_id_cliente_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recargos
    ADD CONSTRAINT recargos_id_cliente_fkey FOREIGN KEY (id_cliente) REFERENCES public.clientes(id_cliente) ON DELETE CASCADE;


--
-- TOC entry 3090 (class 2606 OID 18634)
-- Name: recargos recargos_id_inmueble_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recargos
    ADD CONSTRAINT recargos_id_inmueble_fkey FOREIGN KEY (id_inmueble) REFERENCES public.inmuebles(id_inmueble) ON DELETE CASCADE;


--
-- TOC entry 3092 (class 2606 OID 18644)
-- Name: recargos recargos_id_tipo_operacion_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recargos
    ADD CONSTRAINT recargos_id_tipo_operacion_fkey FOREIGN KEY (id_tipo_operacion) REFERENCES public.tipo_operacion_contable(id_tipo_operacion);


-- Completed on 2021-05-30 19:34:51

--
-- PostgreSQL database dump complete
--

